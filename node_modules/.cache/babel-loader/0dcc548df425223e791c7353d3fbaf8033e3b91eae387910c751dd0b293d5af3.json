{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getErrorMessage = getErrorMessage;\nexports.getErrorCode = getErrorCode;\nfunction getErrorMessage(error) {\n  if (error instanceof Error) {\n    return error.message;\n  } else {\n    return String(error);\n  }\n}\nfunction getErrorCode(error) {\n  if (typeof error === 'object' && error !== null && 'code' in error && typeof error.code === 'number') {\n    return error.code;\n  } else {\n    return null;\n  }\n}","map":{"version":3,"names":["exports","getErrorMessage","getErrorCode","error","Error","message","String","code"],"sources":["C:\\Users\\BIT\\chatboot\\node_modules\\@grpc\\grpc-js\\src\\error.ts"],"sourcesContent":["/*\n * Copyright 2022 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport function getErrorMessage(error: unknown): string {\n  if (error instanceof Error) {\n    return error.message;\n  } else {\n    return String(error);\n  }\n}\n\nexport function getErrorCode(error: unknown): number | null {\n  if (\n    typeof error === 'object' &&\n    error !== null &&\n    'code' in error &&\n    typeof (error as Record<string, unknown>).code === 'number'\n  ) {\n    return (error as Record<string, number>).code;\n  } else {\n    return null;\n  }\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAiBAA,OAAA,CAAAC,eAAA,GAAAA,eAAA;AAQAD,OAAA,CAAAE,YAAA,GAAAA,YAAA;AARA,SAAgBD,eAAeA,CAACE,KAAc;EAC5C,IAAIA,KAAK,YAAYC,KAAK,EAAE;IAC1B,OAAOD,KAAK,CAACE,OAAO;EACtB,CAAC,MAAM;IACL,OAAOC,MAAM,CAACH,KAAK,CAAC;EACtB;AACF;AAEA,SAAgBD,YAAYA,CAACC,KAAc;EACzC,IACE,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,KAAK,IAAI,IACd,MAAM,IAAIA,KAAK,IACf,OAAQA,KAAiC,CAACI,IAAI,KAAK,QAAQ,EAC3D;IACA,OAAQJ,KAAgC,CAACI,IAAI;EAC/C,CAAC,MAAM;IACL,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}