{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateServiceStub = generateServiceStub;\nconst abort_controller_1 = require(\"abort-controller\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst featureDetection_1 = require(\"./featureDetection\");\nconst streamArrayParser_1 = require(\"./streamArrayParser\");\nconst stream_1 = require(\"stream\");\nconst fetchNode = (...args) => import('node-fetch').then(({\n  default: fetch\n}) => fetch(...args));\n// Node.js before v19 does not enable keepalive by default.\n// We'll try to enable it very carefully to make sure we don't break possible non-Node use cases.\n// TODO: remove this after Node 18 is EOL.\n// More info:\n// - https://github.com/node-fetch/node-fetch#custom-agent\n// - https://github.com/googleapis/gax-nodejs/pull/1534\nlet agentOption = null;\nif ((0, featureDetection_1.isNodeJS)()) {\n  const http = require('http');\n  const https = require('https');\n  const httpAgent = new http.Agent({\n    keepAlive: true\n  });\n  const httpsAgent = new https.Agent({\n    keepAlive: true\n  });\n  agentOption = parsedUrl => {\n    if (parsedUrl.protocol === 'http:') {\n      return httpAgent;\n    }\n    return httpsAgent;\n  };\n}\nfunction generateServiceStub(rpcs, protocol, servicePath, servicePort, auth, requestEncoder, responseDecoder, numericEnums, minifyJson) {\n  const fetch = (0, featureDetection_1.hasWindowFetch)() ? window.fetch : fetchNode;\n  const serviceStub = {\n    // close method should close all cancel controllers. If this feature request in the future, we can have a cancelControllerFactory that tracks created cancel controllers, and abort them all in close method.\n    close: () => {\n      return {\n        cancel: () => {}\n      };\n    }\n  };\n  for (const [rpcName, rpc] of Object.entries(rpcs)) {\n    serviceStub[rpcName] = (request, options, _metadata, callback) => {\n      options ??= {};\n      // We cannot use async-await in this function because we need to return the canceller object as soon as possible.\n      // Using plain old promises instead.\n      let fetchParameters;\n      try {\n        fetchParameters = requestEncoder(rpc, protocol, servicePath, servicePort, request, numericEnums, minifyJson);\n      } catch (err) {\n        // we could not encode parameters; pass error to the callback\n        // and return a no-op canceler object.\n        if (callback) {\n          callback(err);\n        }\n        return {\n          cancel() {}\n        };\n      }\n      const cancelController = (0, featureDetection_1.hasAbortController)() ? new AbortController() : new abort_controller_1.AbortController();\n      const cancelSignal = cancelController.signal;\n      let cancelRequested = false;\n      const url = fetchParameters.url;\n      const headers = new Headers(fetchParameters.headers);\n      for (const key of Object.keys(options)) {\n        headers.set(key, options[key][0]);\n      }\n      const streamArrayParser = new streamArrayParser_1.StreamArrayParser(rpc);\n      auth.getRequestHeaders().then(authHeader => {\n        const fetchRequest = {\n          headers: google_auth_library_1.gaxios.Gaxios.mergeHeaders(authHeader, headers),\n          body: fetchParameters.body,\n          method: fetchParameters.method,\n          signal: cancelSignal\n        };\n        if (agentOption) {\n          fetchRequest.agent = agentOption;\n        }\n        if (fetchParameters.method === 'GET' || fetchParameters.method === 'DELETE') {\n          delete fetchRequest['body'];\n        }\n        return fetch(url, fetchRequest);\n      }).then(response => {\n        if (response.ok && rpc.responseStream) {\n          (0, stream_1.pipeline)(response.body, streamArrayParser, err => {\n            if (err && (!cancelRequested || err instanceof Error && err.name !== 'AbortError')) {\n              if (callback) {\n                callback(err);\n              }\n              streamArrayParser.emit('error', err);\n            }\n          });\n          return;\n        } else {\n          return Promise.all([Promise.resolve(response.ok), response.arrayBuffer()]).then(([ok, buffer]) => {\n            const response = responseDecoder(rpc, ok, buffer);\n            callback(null, response);\n          }).catch(err => {\n            if (!cancelRequested || err.name !== 'AbortError') {\n              if (rpc.responseStream) {\n                if (callback) {\n                  callback(err);\n                }\n                streamArrayParser.emit('error', err);\n              } else if (callback) {\n                callback(err);\n              } else {\n                throw err;\n              }\n            }\n          });\n        }\n      }).catch(err => {\n        if (rpc.responseStream) {\n          if (callback) {\n            callback(err);\n          }\n          streamArrayParser.emit('error', err);\n        } else if (callback) {\n          callback(err);\n        } else {\n          throw err;\n        }\n      });\n      if (rpc.responseStream) {\n        return streamArrayParser;\n      }\n      return {\n        cancel: () => {\n          cancelRequested = true;\n          cancelController.abort();\n        }\n      };\n    };\n  }\n  return serviceStub;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","generateServiceStub","abort_controller_1","require","google_auth_library_1","featureDetection_1","streamArrayParser_1","stream_1","fetchNode","args","then","default","fetch","agentOption","isNodeJS","http","https","httpAgent","Agent","keepAlive","httpsAgent","parsedUrl","protocol","rpcs","servicePath","servicePort","auth","requestEncoder","responseDecoder","numericEnums","minifyJson","hasWindowFetch","window","serviceStub","close","cancel","rpcName","rpc","entries","request","options","_metadata","callback","fetchParameters","err","cancelController","hasAbortController","AbortController","cancelSignal","signal","cancelRequested","url","headers","Headers","key","keys","set","streamArrayParser","StreamArrayParser","getRequestHeaders","authHeader","fetchRequest","gaxios","Gaxios","mergeHeaders","body","method","agent","response","ok","responseStream","pipeline","Error","name","emit","Promise","all","resolve","arrayBuffer","buffer","catch","abort"],"sources":["C:/Users/BIT/chatboot/node_modules/google-gax/build/src/fallbackServiceStub.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateServiceStub = generateServiceStub;\nconst abort_controller_1 = require(\"abort-controller\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst featureDetection_1 = require(\"./featureDetection\");\nconst streamArrayParser_1 = require(\"./streamArrayParser\");\nconst stream_1 = require(\"stream\");\nconst fetchNode = (...args) => import('node-fetch').then(({ default: fetch }) => fetch(...args));\n// Node.js before v19 does not enable keepalive by default.\n// We'll try to enable it very carefully to make sure we don't break possible non-Node use cases.\n// TODO: remove this after Node 18 is EOL.\n// More info:\n// - https://github.com/node-fetch/node-fetch#custom-agent\n// - https://github.com/googleapis/gax-nodejs/pull/1534\nlet agentOption = null;\nif ((0, featureDetection_1.isNodeJS)()) {\n    const http = require('http');\n    const https = require('https');\n    const httpAgent = new http.Agent({ keepAlive: true });\n    const httpsAgent = new https.Agent({ keepAlive: true });\n    agentOption = (parsedUrl) => {\n        if (parsedUrl.protocol === 'http:') {\n            return httpAgent;\n        }\n        return httpsAgent;\n    };\n}\nfunction generateServiceStub(rpcs, protocol, servicePath, servicePort, auth, requestEncoder, responseDecoder, numericEnums, minifyJson) {\n    const fetch = (0, featureDetection_1.hasWindowFetch)()\n        ? window.fetch\n        : fetchNode;\n    const serviceStub = {\n        // close method should close all cancel controllers. If this feature request in the future, we can have a cancelControllerFactory that tracks created cancel controllers, and abort them all in close method.\n        close: () => {\n            return { cancel: () => { } };\n        },\n    };\n    for (const [rpcName, rpc] of Object.entries(rpcs)) {\n        serviceStub[rpcName] = (request, options, _metadata, callback) => {\n            options ??= {};\n            // We cannot use async-await in this function because we need to return the canceller object as soon as possible.\n            // Using plain old promises instead.\n            let fetchParameters;\n            try {\n                fetchParameters = requestEncoder(rpc, protocol, servicePath, servicePort, request, numericEnums, minifyJson);\n            }\n            catch (err) {\n                // we could not encode parameters; pass error to the callback\n                // and return a no-op canceler object.\n                if (callback) {\n                    callback(err);\n                }\n                return {\n                    cancel() { },\n                };\n            }\n            const cancelController = (0, featureDetection_1.hasAbortController)()\n                ? new AbortController()\n                : new abort_controller_1.AbortController();\n            const cancelSignal = cancelController.signal;\n            let cancelRequested = false;\n            const url = fetchParameters.url;\n            const headers = new Headers(fetchParameters.headers);\n            for (const key of Object.keys(options)) {\n                headers.set(key, options[key][0]);\n            }\n            const streamArrayParser = new streamArrayParser_1.StreamArrayParser(rpc);\n            auth\n                .getRequestHeaders()\n                .then(authHeader => {\n                const fetchRequest = {\n                    headers: google_auth_library_1.gaxios.Gaxios.mergeHeaders(authHeader, headers),\n                    body: fetchParameters.body,\n                    method: fetchParameters.method,\n                    signal: cancelSignal,\n                };\n                if (agentOption) {\n                    fetchRequest.agent = agentOption;\n                }\n                if (fetchParameters.method === 'GET' ||\n                    fetchParameters.method === 'DELETE') {\n                    delete fetchRequest['body'];\n                }\n                return fetch(url, fetchRequest);\n            })\n                .then((response) => {\n                if (response.ok && rpc.responseStream) {\n                    (0, stream_1.pipeline)(response.body, streamArrayParser, (err) => {\n                        if (err &&\n                            (!cancelRequested ||\n                                (err instanceof Error && err.name !== 'AbortError'))) {\n                            if (callback) {\n                                callback(err);\n                            }\n                            streamArrayParser.emit('error', err);\n                        }\n                    });\n                    return;\n                }\n                else {\n                    return Promise.all([\n                        Promise.resolve(response.ok),\n                        response.arrayBuffer(),\n                    ])\n                        .then(([ok, buffer]) => {\n                        const response = responseDecoder(rpc, ok, buffer);\n                        callback(null, response);\n                    })\n                        .catch((err) => {\n                        if (!cancelRequested || err.name !== 'AbortError') {\n                            if (rpc.responseStream) {\n                                if (callback) {\n                                    callback(err);\n                                }\n                                streamArrayParser.emit('error', err);\n                            }\n                            else if (callback) {\n                                callback(err);\n                            }\n                            else {\n                                throw err;\n                            }\n                        }\n                    });\n                }\n            })\n                .catch((err) => {\n                if (rpc.responseStream) {\n                    if (callback) {\n                        callback(err);\n                    }\n                    streamArrayParser.emit('error', err);\n                }\n                else if (callback) {\n                    callback(err);\n                }\n                else {\n                    throw err;\n                }\n            });\n            if (rpc.responseStream) {\n                return streamArrayParser;\n            }\n            return {\n                cancel: () => {\n                    cancelRequested = true;\n                    cancelController.abort();\n                },\n            };\n        };\n    }\n    return serviceStub;\n}\n//# sourceMappingURL=fallbackServiceStub.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}