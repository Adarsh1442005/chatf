{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst url_1 = require(\"url\");\nconst common_js_1 = require(\"./common.js\");\nconst retry_js_1 = require(\"./retry.js\");\nconst stream_1 = require(\"stream\");\nconst interceptor_js_1 = require(\"./interceptor.js\");\nconst randomUUID = async () => globalThis.crypto?.randomUUID() || (await import('crypto')).randomUUID();\nclass Gaxios {\n  agentCache = new Map();\n  /**\n   * Default HTTP options that will be used for every HTTP request.\n   */\n  defaults;\n  /**\n   * Interceptors\n   */\n  interceptors;\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    this.defaults = defaults || {};\n    this.interceptors = {\n      request: new interceptor_js_1.GaxiosInterceptorManager(),\n      response: new interceptor_js_1.GaxiosInterceptorManager()\n    };\n  }\n  /**\n   * A {@link fetch `fetch`} compliant API for {@link Gaxios}.\n   *\n   * @remarks\n   *\n   * This is useful as a drop-in replacement for `fetch` API usage.\n   *\n   * @example\n   *\n   * ```ts\n   * const gaxios = new Gaxios();\n   * const myFetch: typeof fetch = (...args) => gaxios.fetch(...args);\n   * await myFetch('https://example.com');\n   * ```\n   *\n   * @param args `fetch` API or `Gaxios#request` parameters\n   * @returns the {@link Response} with Gaxios-added properties\n   */\n  fetch(...args) {\n    // Up to 2 parameters in either overload\n    const input = args[0];\n    const init = args[1];\n    let url = undefined;\n    const headers = new Headers();\n    // prepare URL\n    if (typeof input === 'string') {\n      url = new url_1.URL(input);\n    } else if (input instanceof url_1.URL) {\n      url = input;\n    } else if (input && input.url) {\n      url = new url_1.URL(input.url);\n    }\n    // prepare headers\n    if (input && typeof input === 'object' && 'headers' in input) {\n      _a.mergeHeaders(headers, input.headers);\n    }\n    if (init) {\n      _a.mergeHeaders(headers, new Headers(init.headers));\n    }\n    // prepare request\n    if (typeof input === 'object' && !(input instanceof url_1.URL)) {\n      // input must have been a non-URL object\n      return this.request({\n        ...init,\n        ...input,\n        headers,\n        url\n      });\n    } else {\n      // input must have been a string or URL\n      return this.request({\n        ...init,\n        headers,\n        url\n      });\n    }\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async request(opts = {}) {\n    let prepared = await this.#prepareRequest(opts);\n    prepared = await this.#applyRequestInterceptors(prepared);\n    return this.#applyResponseInterceptors(this._request(prepared));\n  }\n  async _defaultAdapter(config) {\n    const fetchImpl = config.fetchImplementation || this.defaults.fetchImplementation || (await _a.#getFetch());\n    // node-fetch v3 warns when `data` is present\n    // https://github.com/node-fetch/node-fetch/issues/1000\n    const preparedOpts = {\n      ...config\n    };\n    delete preparedOpts.data;\n    const res = await fetchImpl(config.url, preparedOpts);\n    const data = await this.getResponseData(config, res);\n    if (!Object.getOwnPropertyDescriptor(res, 'data')?.configurable) {\n      // Work-around for `node-fetch` v3 as accessing `data` would otherwise throw\n      Object.defineProperties(res, {\n        data: {\n          configurable: true,\n          writable: true,\n          enumerable: true,\n          value: data\n        }\n      });\n    }\n    // Keep object as an instance of `Response`\n    return Object.assign(res, {\n      config,\n      data\n    });\n  }\n  /**\n   * Internal, retryable version of the `request` method.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async _request(opts) {\n    try {\n      let translatedResponse;\n      if (opts.adapter) {\n        translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n      } else {\n        translatedResponse = await this._defaultAdapter(opts);\n      }\n      if (!opts.validateStatus(translatedResponse.status)) {\n        if (opts.responseType === 'stream') {\n          const response = [];\n          for await (const chunk of opts.data) {\n            response.push(chunk);\n          }\n          translatedResponse.data = response;\n        }\n        throw new common_js_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n      }\n      return translatedResponse;\n    } catch (e) {\n      const err = e instanceof common_js_1.GaxiosError ? e : new common_js_1.GaxiosError(e.message, opts, undefined, e);\n      const {\n        shouldRetry,\n        config\n      } = await (0, retry_js_1.getRetryConfig)(err);\n      if (shouldRetry && config) {\n        err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt;\n        // The error's config could be redacted - therefore we only want to\n        // copy the retry state over to the existing config\n        opts.retryConfig = err.config?.retryConfig;\n        // re-prepare timeout for the next request\n        this.#appendTimeoutToSignal(opts);\n        return this._request(opts);\n      }\n      if (opts.errorRedactor) {\n        opts.errorRedactor(err);\n      }\n      throw err;\n    }\n  }\n  async getResponseData(opts, res) {\n    if (opts.maxContentLength && res.headers.has('content-length') && opts.maxContentLength < Number.parseInt(res.headers?.get('content-length') || '')) {\n      throw new common_js_1.GaxiosError(\"Response's `Content-Length` is over the limit.\", opts, Object.assign(res, {\n        config: opts\n      }));\n    }\n    switch (opts.responseType) {\n      case 'stream':\n        return res.body;\n      case 'json':\n        return res.json();\n      case 'arraybuffer':\n        return res.arrayBuffer();\n      case 'blob':\n        return res.blob();\n      case 'text':\n        return res.text();\n      default:\n        return this.getResponseDataFromContentType(res);\n    }\n  }\n  #urlMayUseProxy(url, noProxy = []) {\n    const candidate = new url_1.URL(url);\n    const noProxyList = [...noProxy];\n    const noProxyEnvList = (process.env.NO_PROXY ?? process.env.no_proxy)?.split(',') || [];\n    for (const rule of noProxyEnvList) {\n      noProxyList.push(rule.trim());\n    }\n    for (const rule of noProxyList) {\n      // Match regex\n      if (rule instanceof RegExp) {\n        if (rule.test(candidate.toString())) {\n          return false;\n        }\n      }\n      // Match URL\n      else if (rule instanceof url_1.URL) {\n        if (rule.origin === candidate.origin) {\n          return false;\n        }\n      }\n      // Match string regex\n      else if (rule.startsWith('*.') || rule.startsWith('.')) {\n        const cleanedRule = rule.replace(/^\\*\\./, '.');\n        if (candidate.hostname.endsWith(cleanedRule)) {\n          return false;\n        }\n      }\n      // Basic string match\n      else if (rule === candidate.origin || rule === candidate.hostname || rule === candidate.href) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Applies the request interceptors. The request interceptors are applied after the\n   * call to prepareRequest is completed.\n   *\n   * @param {GaxiosOptionsPrepared} options The current set of options.\n   *\n   * @returns {Promise<GaxiosOptionsPrepared>} Promise that resolves to the set of options or response after interceptors are applied.\n   */\n  async #applyRequestInterceptors(options) {\n    let promiseChain = Promise.resolve(options);\n    for (const interceptor of this.interceptors.request.values()) {\n      if (interceptor) {\n        promiseChain = promiseChain.then(interceptor.resolved, interceptor.rejected);\n      }\n    }\n    return promiseChain;\n  }\n  /**\n   * Applies the response interceptors. The response interceptors are applied after the\n   * call to request is made.\n   *\n   * @param {GaxiosOptionsPrepared} options The current set of options.\n   *\n   * @returns {Promise<GaxiosOptionsPrepared>} Promise that resolves to the set of options or response after interceptors are applied.\n   */\n  async #applyResponseInterceptors(response) {\n    let promiseChain = Promise.resolve(response);\n    for (const interceptor of this.interceptors.response.values()) {\n      if (interceptor) {\n        promiseChain = promiseChain.then(interceptor.resolved, interceptor.rejected);\n      }\n    }\n    return promiseChain;\n  }\n  /**\n   * Validates the options, merges them with defaults, and prepare request.\n   *\n   * @param options The original options passed from the client.\n   * @returns Prepared options, ready to make a request\n   */\n  async #prepareRequest(options) {\n    // Prepare Headers - copy in order to not mutate the original objects\n    const preparedHeaders = new Headers(this.defaults.headers);\n    _a.mergeHeaders(preparedHeaders, options.headers);\n    // Merge options\n    const opts = (0, extend_1.default)(true, {}, this.defaults, options);\n    if (!opts.url) {\n      throw new Error('URL is required.');\n    }\n    if (opts.baseURL) {\n      opts.url = new url_1.URL(opts.url, opts.baseURL);\n    }\n    // don't modify the properties of a default or provided URL\n    opts.url = new url_1.URL(opts.url);\n    if (opts.params) {\n      if (opts.paramsSerializer) {\n        let additionalQueryParams = opts.paramsSerializer(opts.params);\n        if (additionalQueryParams.startsWith('?')) {\n          additionalQueryParams = additionalQueryParams.slice(1);\n        }\n        const prefix = opts.url.toString().includes('?') ? '&' : '?';\n        opts.url = opts.url + prefix + additionalQueryParams;\n      } else {\n        const url = opts.url instanceof url_1.URL ? opts.url : new url_1.URL(opts.url);\n        for (const [key, value] of new URLSearchParams(opts.params)) {\n          url.searchParams.append(key, value);\n        }\n        opts.url = url;\n      }\n    }\n    if (typeof options.maxContentLength === 'number') {\n      opts.size = options.maxContentLength;\n    }\n    if (typeof options.maxRedirects === 'number') {\n      opts.follow = options.maxRedirects;\n    }\n    const shouldDirectlyPassData = typeof opts.data === 'string' || opts.data instanceof ArrayBuffer || opts.data instanceof Blob ||\n    // Node 18 does not have a global `File` object\n    globalThis.File && opts.data instanceof File || opts.data instanceof FormData || opts.data instanceof stream_1.Readable || opts.data instanceof ReadableStream || opts.data instanceof String || opts.data instanceof URLSearchParams || ArrayBuffer.isView(opts.data) ||\n    // `Buffer` (Node.js), `DataView`, `TypedArray`\n    /**\n     * @deprecated `node-fetch` or another third-party's request types\n     */\n    ['Blob', 'File', 'FormData'].includes(opts.data?.constructor?.name || '');\n    if (opts.multipart?.length) {\n      const boundary = await randomUUID();\n      preparedHeaders.set('content-type', `multipart/related; boundary=${boundary}`);\n      opts.body = stream_1.Readable.from(this.getMultipartRequest(opts.multipart, boundary));\n    } else if (shouldDirectlyPassData) {\n      opts.body = opts.data;\n    } else if (typeof opts.data === 'object') {\n      if (preparedHeaders.get('Content-Type') === 'application/x-www-form-urlencoded') {\n        // If www-form-urlencoded content type has been set, but data is\n        // provided as an object, serialize the content\n        opts.body = opts.paramsSerializer ? opts.paramsSerializer(opts.data) : new URLSearchParams(opts.data);\n      } else {\n        if (!preparedHeaders.has('content-type')) {\n          preparedHeaders.set('content-type', 'application/json');\n        }\n        opts.body = JSON.stringify(opts.data);\n      }\n    } else if (opts.data) {\n      opts.body = opts.data;\n    }\n    opts.validateStatus = opts.validateStatus || this.validateStatus;\n    opts.responseType = opts.responseType || 'unknown';\n    if (!preparedHeaders.has('accept') && opts.responseType === 'json') {\n      preparedHeaders.set('accept', 'application/json');\n    }\n    const proxy = opts.proxy || process?.env?.HTTPS_PROXY || process?.env?.https_proxy || process?.env?.HTTP_PROXY || process?.env?.http_proxy;\n    if (opts.agent) {\n      // don't do any of the following options - use the user-provided agent.\n    } else if (proxy && this.#urlMayUseProxy(opts.url, opts.noProxy)) {\n      const HttpsProxyAgent = await _a.#getProxyAgent();\n      if (this.agentCache.has(proxy)) {\n        opts.agent = this.agentCache.get(proxy);\n      } else {\n        opts.agent = new HttpsProxyAgent(proxy, {\n          cert: opts.cert,\n          key: opts.key\n        });\n        this.agentCache.set(proxy, opts.agent);\n      }\n    } else if (opts.cert && opts.key) {\n      // Configure client for mTLS\n      if (this.agentCache.has(opts.key)) {\n        opts.agent = this.agentCache.get(opts.key);\n      } else {\n        opts.agent = new https_1.Agent({\n          cert: opts.cert,\n          key: opts.key\n        });\n        this.agentCache.set(opts.key, opts.agent);\n      }\n    }\n    if (typeof opts.errorRedactor !== 'function' && opts.errorRedactor !== false) {\n      opts.errorRedactor = common_js_1.defaultErrorRedactor;\n    }\n    if (opts.body && !('duplex' in opts)) {\n      /**\n       * required for Node.js and the type isn't available today\n       * @link https://github.com/nodejs/node/issues/46221\n       * @link https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1483\n       */\n      opts.duplex = 'half';\n    }\n    this.#appendTimeoutToSignal(opts);\n    return Object.assign(opts, {\n      headers: preparedHeaders,\n      url: opts.url instanceof url_1.URL ? opts.url : new url_1.URL(opts.url)\n    });\n  }\n  #appendTimeoutToSignal(opts) {\n    if (opts.timeout) {\n      const timeoutSignal = AbortSignal.timeout(opts.timeout);\n      if (opts.signal && !opts.signal.aborted) {\n        opts.signal = AbortSignal.any([opts.signal, timeoutSignal]);\n      } else {\n        opts.signal = timeoutSignal;\n      }\n    }\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Attempts to parse a response by looking at the Content-Type header.\n   * @param {Response} response the HTTP response.\n   * @returns {Promise<any>} a promise that resolves to the response data.\n   */\n  async getResponseDataFromContentType(response) {\n    let contentType = response.headers.get('Content-Type');\n    if (contentType === null) {\n      // Maintain existing functionality by calling text()\n      return response.text();\n    }\n    contentType = contentType.toLowerCase();\n    if (contentType.includes('application/json')) {\n      let data = await response.text();\n      try {\n        data = JSON.parse(data);\n      } catch {\n        // continue\n      }\n      return data;\n    } else if (contentType.match(/^text\\//)) {\n      return response.text();\n    } else {\n      // If the content type is something not easily handled, just return the raw data (blob)\n      return response.blob();\n    }\n  }\n  /**\n   * Creates an async generator that yields the pieces of a multipart/related request body.\n   * This implementation follows the spec: https://www.ietf.org/rfc/rfc2387.txt. However, recursive\n   * multipart/related requests are not currently supported.\n   *\n   * @param {GaxioMultipartOptions[]} multipartOptions the pieces to turn into a multipart/related body.\n   * @param {string} boundary the boundary string to be placed between each part.\n   */\n  async *getMultipartRequest(multipartOptions, boundary) {\n    const finale = `--${boundary}--`;\n    for (const currentPart of multipartOptions) {\n      const partContentType = currentPart.headers.get('Content-Type') || 'application/octet-stream';\n      const preamble = `--${boundary}\\r\\nContent-Type: ${partContentType}\\r\\n\\r\\n`;\n      yield preamble;\n      if (typeof currentPart.content === 'string') {\n        yield currentPart.content;\n      } else {\n        yield* currentPart.content;\n      }\n      yield '\\r\\n';\n    }\n    yield finale;\n  }\n  /**\n   * A cache for the lazily-loaded proxy agent.\n   *\n   * Should use {@link Gaxios[#getProxyAgent]} to retrieve.\n   */\n  // using `import` to dynamically import the types here\n  static #proxyAgent;\n  /**\n   * A cache for the lazily-loaded fetch library.\n   *\n   * Should use {@link Gaxios[#getFetch]} to retrieve.\n   */\n  //\n  static #fetch;\n  /**\n   * Imports, caches, and returns a proxy agent - if not already imported\n   *\n   * @returns A proxy agent\n   */\n  static async #getProxyAgent() {\n    this.#proxyAgent ||= (await import('https-proxy-agent')).HttpsProxyAgent;\n    return this.#proxyAgent;\n  }\n  static async #getFetch() {\n    const hasWindow = typeof window !== 'undefined' && !!window;\n    this.#fetch ||= hasWindow ? window.fetch : (await import('node-fetch')).default;\n    return this.#fetch;\n  }\n  /**\n   * Merges headers.\n   *\n   * @param base headers to append/overwrite to\n   * @param append headers to append/overwrite with\n   * @returns the base headers instance with merged `Headers`\n   */\n  static mergeHeaders(base, ...append) {\n    base = base instanceof Headers ? base : new Headers(base);\n    for (const headers of append) {\n      const add = headers instanceof Headers ? headers : new Headers(headers);\n      add.forEach((value, key) => {\n        // set-cookie is the only header that would repeat.\n        // A bit of background: https://developer.mozilla.org/en-US/docs/Web/API/Headers/getSetCookie\n        key === 'set-cookie' ? base.append(key, value) : base.set(key, value);\n      });\n    }\n    return base;\n  }\n}\nexports.Gaxios = Gaxios;\n_a = Gaxios;","map":{"version":3,"names":["extend_1","__importDefault","require","https_1","url_1","common_js_1","retry_js_1","stream_1","interceptor_js_1","randomUUID","globalThis","crypto","Gaxios","agentCache","Map","defaults","interceptors","constructor","request","GaxiosInterceptorManager","response","fetch","args","input","init","url","undefined","headers","Headers","URL","_a","mergeHeaders","opts","prepared","prepareRequest","applyRequestInterceptors","applyResponseInterceptors","_request","_defaultAdapter","config","fetchImpl","fetchImplementation","getFetch","preparedOpts","data","res","getResponseData","Object","getOwnPropertyDescriptor","configurable","defineProperties","writable","enumerable","value","assign","translatedResponse","adapter","bind","validateStatus","status","responseType","chunk","push","GaxiosError","e","err","message","shouldRetry","getRetryConfig","retryConfig","currentRetryAttempt","appendTimeoutToSignal","errorRedactor","maxContentLength","has","Number","parseInt","get","body","json","arrayBuffer","blob","text","getResponseDataFromContentType","urlMayUseProxy","#urlMayUseProxy","noProxy","candidate","noProxyList","noProxyEnvList","process","env","NO_PROXY","no_proxy","split","rule","trim","RegExp","test","toString","origin","startsWith","cleanedRule","replace","hostname","endsWith","href","#applyRequestInterceptors","options","promiseChain","Promise","resolve","interceptor","values","then","resolved","rejected","#applyResponseInterceptors","#prepareRequest","preparedHeaders","default","Error","baseURL","params","paramsSerializer","additionalQueryParams","slice","prefix","includes","key","URLSearchParams","searchParams","append","size","maxRedirects","follow","shouldDirectlyPassData","ArrayBuffer","Blob","File","FormData","Readable","ReadableStream","String","isView","name","multipart","length","boundary","set","from","getMultipartRequest","JSON","stringify","proxy","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","agent","HttpsProxyAgent","getProxyAgent","cert","Agent","defaultErrorRedactor","duplex","#appendTimeoutToSignal","timeout","timeoutSignal","AbortSignal","signal","aborted","any","contentType","toLowerCase","parse","match","multipartOptions","finale","currentPart","partContentType","preamble","content","proxyAgent","#getProxyAgent","#getFetch","hasWindow","window","base","add","forEach","exports"],"sources":["../../../src/gaxios.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}