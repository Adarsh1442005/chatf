{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.googleProtobufStructToProto3JSON = googleProtobufStructToProto3JSON;\nexports.googleProtobufListValueToProto3JSON = googleProtobufListValueToProto3JSON;\nexports.googleProtobufValueToProto3JSON = googleProtobufValueToProto3JSON;\nexports.googleProtobufStructFromProto3JSON = googleProtobufStructFromProto3JSON;\nexports.googleProtobufListValueFromProto3JSON = googleProtobufListValueFromProto3JSON;\nexports.googleProtobufValueFromProto3JSON = googleProtobufValueFromProto3JSON;\nconst util_1 = require(\"./util\");\nfunction googleProtobufStructToProto3JSON(obj) {\n  const result = {};\n  const fields = obj.fields;\n  for (const [key, value] of Object.entries(fields)) {\n    result[key] = googleProtobufValueToProto3JSON(value);\n  }\n  return result;\n}\nfunction googleProtobufListValueToProto3JSON(obj) {\n  (0, util_1.assert)(Array.isArray(obj.values), 'ListValue internal representation must contain array of values');\n  return obj.values.map(googleProtobufValueToProto3JSON);\n}\nfunction googleProtobufValueToProto3JSON(obj) {\n  if (Object.prototype.hasOwnProperty.call(obj, 'nullValue')) {\n    return null;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'numberValue') && typeof obj.numberValue === 'number') {\n    if (!Number.isFinite(obj.numberValue)) {\n      return obj.numberValue.toString();\n    }\n    return obj.numberValue;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'stringValue') && typeof obj.stringValue === 'string') {\n    return obj.stringValue;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'boolValue') && typeof obj.boolValue === 'boolean') {\n    return obj.boolValue;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'structValue') && typeof obj.structValue === 'object') {\n    return googleProtobufStructToProto3JSON(obj.structValue);\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'listValue') && typeof obj === 'object' && typeof obj.listValue === 'object') {\n    return googleProtobufListValueToProto3JSON(obj.listValue);\n  }\n  // Assuming empty Value to be null\n  return null;\n}\nfunction googleProtobufStructFromProto3JSON(json) {\n  const fields = {};\n  for (const [key, value] of Object.entries(json)) {\n    fields[key] = googleProtobufValueFromProto3JSON(value);\n  }\n  return {\n    fields\n  };\n}\nfunction googleProtobufListValueFromProto3JSON(json) {\n  return {\n    values: json.map(element => googleProtobufValueFromProto3JSON(element))\n  };\n}\nfunction googleProtobufValueFromProto3JSON(json) {\n  if (json === null) {\n    return {\n      nullValue: 'NULL_VALUE'\n    };\n  }\n  if (typeof json === 'number') {\n    return {\n      numberValue: json\n    };\n  }\n  if (typeof json === 'string') {\n    return {\n      stringValue: json\n    };\n  }\n  if (typeof json === 'boolean') {\n    return {\n      boolValue: json\n    };\n  }\n  if (Array.isArray(json)) {\n    return {\n      listValue: googleProtobufListValueFromProto3JSON(json)\n    };\n  }\n  if (typeof json === 'object') {\n    return {\n      structValue: googleProtobufStructFromProto3JSON(json)\n    };\n  }\n  throw new Error(`googleProtobufValueFromProto3JSON: incorrect parameter type: ${typeof json}`);\n}","map":{"version":3,"names":["exports","googleProtobufStructToProto3JSON","googleProtobufListValueToProto3JSON","googleProtobufValueToProto3JSON","googleProtobufStructFromProto3JSON","googleProtobufListValueFromProto3JSON","googleProtobufValueFromProto3JSON","util_1","require","obj","result","fields","key","value","Object","entries","assert","Array","isArray","values","map","prototype","hasOwnProperty","call","numberValue","Number","isFinite","toString","stringValue","boolValue","structValue","listValue","json","element","nullValue","Error"],"sources":["../../typescript/src/value.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}